// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator nexusPrisma {
  provider = "nexus-prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Member {
  id            Int            @id @default(autoincrement())
  // Until controller accounts are verified chainMemberId shouldn't be @unique
  chainMemberId String
  name          String
  email         String         @unique
  password      String
  subscriptions Subscription[]
  notifications Notification[]

  @@index(chainMemberId)
}

model Subscription {
  id                  Int              @id @default(autoincrement())
  member              Member           @relation(fields: [memberId], references: [id])
  memberId            Int
  notificationType    NotificationType
  entityIds           String[]
  shouldNotify        Boolean
  shouldNotifyByEmail Boolean

  @@unique([memberId, notificationType])
}

model Notification {
  id               Int              @id @default(autoincrement())
  member           Member           @relation(fields: [memberId], references: [id])
  memberId         Int
  notificationType NotificationType
  eventId          String
  entityId         String?
  isSent           Boolean          @default(false)
  isRead           Boolean          @default(false)

  @@unique([memberId, eventId])
}

model QueryNodeConsumer {
  id                Int @id @default(autoincrement())
  lastConsumedBlock Int
}

enum NotificationType {
  // ------------------
  // General
  // ------------------

  // Forum: ThreadCreatedEvent
  FORUM_THREAD_ALL
  FORUM_THREAD_MENTION

  // Forum: PostAddedEvent
  FORUM_POST_ALL
  FORUM_POST_MENTION
  FORUM_POST_REPLY
  FORUM_THREAD_CREATOR
  FORUM_THREAD_CONTIBUTOR

  // Proposal: ProposalCreatedEvent
  PROPOSAL_CREATED_ALL

  // Proposal: ProposalStatusUpdatedEvent
  PROPOSAL_STATUS_ALL
  PROPOSAL_STATUS_CREATOR

  // Proposal: ProposalVotedEvent
  PROPOSAL_VOTE_ALL
  PROPOSAL_VOTE_CREATOR

  // Proposal: ProposalDiscussionPostCreatedEvent
  PROPOSAL_DISCUSSION_MENTION
  PROPOSAL_DISCUSSION_CREATOR
  PROPOSAL_DISCUSSION_CONTRIBUTOR

  // Referendum
  ELECTION_ANNOUNCING_STARTED
  ELECTION_VOTING_STARTED
  ELECTION_REVEALING_STARTED
  ELECTION_COUNCIL_ELECTED

  // ------------------
  // Entity specific
  // ------------------
  // Forum
  FORUM_WATCHED_CATEGORY_POST
  FORUM_WATCHED_CATEGORY_THREAD
  FORUM_WATCHED_CATEGORY_SUBCATEGORY
  FORUM_WATCHED_THREAD

  // Proposal
  PROPOSAL_WATCHED_STATUS
  PROPOSAL_WATCHED_VOTE
  PROPOSAL_WATCHED_DISCUSSION
}
