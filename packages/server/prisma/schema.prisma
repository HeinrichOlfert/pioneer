// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Member {
  id                Int            @id @default(autoincrement())
  membershipId      String         @unique
  controllerAccount String         @unique
  name              String
  email             String?        @unique
  isEmailVerified   Boolean        @default(false)
  AccessToken       AccessToken[]
  Subscription      Subscription[]
  Notification      Notification[]
}

model AccessToken {
  id        Int      @id @default(autoincrement())
  member    Member   @relation(fields: [memberId], references: [id])
  memberId  Int
  token     String
  createdAt DateTime @default(now())
  ttl       Int      @default(31536000000)
}

model Subscription {
  id                  Int              @id @default(autoincrement())
  member              Member           @relation(fields: [memberId], references: [id])
  memberId            Int
  notificationType    NotificationType
  entityId            String?
  isEnabled           Boolean
  shouldNotifyByEmail Boolean

  @@unique([notificationType, entityId, memberId])
}

model Notification {
  id               Int              @id @default(autoincrement())
  member           Member           @relation(fields: [memberId], references: [id])
  memberId         Int
  notificationType NotificationType
  eventId          String
  entityId         String?
  isSent           Boolean          @default(false)
  isRead           Boolean          @default(false)

  @@unique([notificationType, eventId, memberId])
}

model QueryNodeConsumer {
  id                Int @id @default(autoincrement())
  lastConsumedBlock Int
}

enum NotificationType {
  // Forum
  FORUM_POST_MENTION
  FORUM_POST_IN_CREATED_THREAD
  FORUM_POST_IN_WATCHED_THREAD
  FORUM_POST_IN_CONTIBUTED_THREAD
  FORUM_POST_IN_MODERATED_CATEGORY

  // Proposal
  PROPOSAL_POST_MENTION
  PROPOSAL_POST_IN_CREATED_PROPOSAL
  PROPOSAL_POST_IN_CONTRIBUTED_DISCUSSION

  // Referendum
  ELECTION_ANNOUNCING_STARTED
  ELECTION_VOTING_STARTED
  ELECTION_REVEALING_STARTED
  ELECTION_COUNCIL_ELECTED

  // Councilor only
  COUNCILOR_PROPOSAL_CREATED
  COUNCILOR_POST_PROPOSAL
}
